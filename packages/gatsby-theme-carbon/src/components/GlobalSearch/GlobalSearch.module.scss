.container {
  position: relative;
  display: flex;
  max-width: 100%;
  width: 100%;
  height: 3rem;
  background-color: $gray-80;
  color: $white-0;
  transition: max-width $duration-fast-02 $standard-easing,
    background $duration-fast-02 $standard-easing;

  @include breakpoint('lg') {
    max-width: 28rem;
  }
}

.container.inputFocusWithin {
  outline: 2px solid $white-0;
  outline-offset: -2px;
}

.container.hidden {
  max-width: 3rem;
  background-color: $gray-100;
}

.container svg {
  fill: $white-0;
}

.inputWrapper {
  display: flex;
  flex-grow: 1;
  border-bottom: 1px solid $gray-80;
}

.input {
  @include type-style('body-short-02');
  color: $white-0;
  caret-color: $white-0;
  background-color: transparent;
  border: none;
  outline: none;
  width: 100%;
  height: 3rem;
  padding: 0;
  transition: opacity $duration-fast-02 $standard-easing;
}

.input.hidden {
  opacity: 0;
  pointer-events: none;
}

.label {
  // TODO - this can instead use the visually-hidden helper mixin from @carbon/react once it's provided
  // @include visually-hidden;

  position: absolute;
  overflow: hidden;
  width: 1px;
  height: 1px;
  padding: 0;
  border: 0;
  margin: -1px;
  clip: rect(0, 0, 0, 0);
  visibility: inherit;
  white-space: nowrap;
}

.list {
  position: absolute;
  z-index: 10000; /* old z('floating') #940 */
  padding: $spacing-05 0;
  left: 0;
  right: 0;
  top: 3rem;
  background-color: $gray-100;
  border: 1px solid $gray-80;
  border-top: none;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.5);
}

.list.hidden {
  border: none;
  padding: 0;
}

.tab {
  text-transform: capitalize;
}

.description {
  @include type-style('label-01');
  text-transform: lowercase;
  color: $gray-30;
}

.link {
  padding: 6px $spacing-05;
  cursor: pointer;
  @include type-style('heading-01');
  transition: all $duration-fast-01 motion(standard, productive);
  display: block;
  text-decoration: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: $gray-30;

  &:hover {
    background-color: #353535;
    color: $gray-10;
    .description {
      color: $gray-10;
    }
  }
}

.searchButton {
  width: 3rem;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: transparent;
  border: none;
  padding: 0;
  flex-shrink: 0;
  opacity: 1;
  transition: background-color $duration-fast-02 $standard-easing,
    opacity $duration-fast-02 $standard-easing;
  // Hex values used pending shell theming
  &:hover {
    cursor: pointer;
    background-color: #353535;
  }
  &:active {
    background-color: #3d3d3d;
  }
  &:focus {
    // shell header button's don't present focus on mobile
    outline: 2px solid $white-0;
    outline-offset: -2px;
  }
}

.searchButton.hidden {
  opacity: 0;
}

.searchButton.inactive {
  pointer-events: none;
  &:hover {
    background-color: transparent;
  }
}

.search-button--close {
  &:hover {
    background-color: #4c4c4c;
  }
}

.link.active {
  background-color: #353535;
  color: $gray-10;
  outline: 0;
  .description {
    color: $gray-10;
  }
}
