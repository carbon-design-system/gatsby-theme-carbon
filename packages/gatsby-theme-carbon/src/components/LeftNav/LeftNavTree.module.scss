@use '@carbon/react/scss/breakpoint' as breakpoint;
@use '@carbon/react/scss/spacing' as spacing;
@use '@carbon/react/scss/theme' as theme;
@use '@carbon/react/scss/type' as type;
@use '@carbon/react/scss/utilities/convert' as convert;
@use '@carbon/react/scss/zone';

.container {
  height: 100%;
  margin: spacing.$spacing-10 0;
  background-color: theme.$background;

  :global(.cds--tree) {
    overflow: auto;
    height: calc(100% - spacing.$spacing-10);
    background-color: theme.$background;
  }

  :global(.cds--tree-node) {
    background-color: theme.$background;
  }

  // fix left alignment because we are hiding the left icon
  :global(.cds--tree-leaf-node) {
    padding-left: spacing.$spacing-05;
  }

  // label font and cursor overrides
  :global(.cds--tree-node__label) {
    position: relative;
    cursor: pointer;
    @include type.type-style('heading-01');
  }

  // override g10 selected background
  :global(.cds--tree-node--selected > .cds--tree-node__label),
  :global(.cds--tree-node--selected > .cds--tree-node__label::before) {
    background-color: transparent;
  }

  // bold selected labels and make darker
  :global(.cds--tree-node[aria-expanded='true'] > .cds--tree-node__label) {
    color: theme.$text-primary;
    @include type.type-style('heading-01');
  }

  // override g10 hover background
  :global(.cds--tree-node__label:hover),
  :global(.cds--tree-node--selected > .cds--tree-node__label:hover) {
    background-color: theme.$layer-02;
  }

  // child labels have normal font weight
  :global(.cds--tree-node__children .cds--tree-node__label) {
    @include type.type-style('body-compact-01');
  }

  // move all div padding to the anchor
  :global(.cds--tree-node:not(.cds--tree-parent-node) .cds--tree-node__label) {
    padding-top: 0;
    padding-bottom: 0;
  }

  // anchor links fill entire label box
  .anchor {
    width: calc(100% + spacing.$spacing-05);
    padding: 0.375rem spacing.$spacing-05;
    margin-left: -(spacing.$spacing-05);
    color: theme.$text-secondary;
    text-decoration: none;
  }

  // anchor links are darker on hover
  .anchor:hover {
    color: theme.$text-primary;
  }

  // nested anchor link
  :global(.cds--tree-node__children) .anchor {
    width: calc(100% + spacing.$spacing-07);
    padding-left: spacing.$spacing-07;
    margin-left: -(spacing.$spacing-07);
  }

  // have anchor selected match label selected
  :global(.cds--tree-node--selected > .cds--tree-node__label) .anchor {
    position: relative;
    background: theme.$background-selected;
    color: theme.$text-primary;
    @include type.type-style('heading-01');

    &::before {
      position: absolute;
      top: 0;
      left: 0;
      width: 0.25rem;
      height: 100%;
      background-color: theme.$border-interactive;
      content: '';
    }
  }

  // nested 2 deep anchor link
  :global(.cds--tree-node__children > li > .cds--tree-node__children) .anchor {
    width: calc(100% + spacing.$spacing-09);
    padding-left: spacing.$spacing-09;
    margin-left: -(spacing.$spacing-09);
  }

  // expand toggle click target
  :global(.cds--tree-parent-node__toggle) {
    position: absolute;
    top: 0;
    right: 0;
    display: block;
    width: 100%;
    height: 100%;
    margin-top: 0;
    margin-right: 0;
  }

  // custom icon
  :global(.cds--tree-parent-node__toggle::after) {
    position: absolute;
    top: spacing.$spacing-03;
    right: spacing.$spacing-05;
    display: block;
    width: convert.rem(16px);
    height: convert.rem(16px);
    background-color: theme.$icon-primary;
    mask: url("data:image/svg+xml,%3Csvg focusable='false' preserveAspectRatio='xMidYMid meet' xmlns='http://www.w3.org/2000/svg' fill='currentColor' width='16' height='16' viewBox='0 0 16 16' aria-hidden='true' class='cds--tree-node__icon'%3E%3Cpath d='M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z'%3E%3C/path%3E%3C/svg%3E%0A");
    content: '';
  }

  // hide original icon
  :global(.cds--tree-parent-node__toggle-icon) {
    display: none;
  }

  // parent tree node open
  :global(.cds--tree-node[aria-expanded='true']) {
    > * > :global(.cds--tree-parent-node__toggle::after) {
      transform: rotate(180deg);
    }
  }

  // divider styles
  .divider {
    position: relative;
    padding-bottom: spacing.$spacing-05;
    margin-bottom: spacing.$spacing-05;
  }

  .divider::after {
    content: '';
    position: absolute;
    left: spacing.$spacing-05;
    right: spacing.$spacing-05;
    bottom: 0;
    height: 1px;
    background-color: var(--cds-ui-03, #e0e0e0);
  }
}
